Jenkinsfile (Declarative Pipeline)
// Execution on Declarative can always be resumed after an interruption
pipeline {

   agent any
// agent {
       // we will use a VM as a Jenkins agent, with all utilities neeed to deploy (example AWS CLI, ...)
       // TODO
//     docker { image 'node:16.13.1-alpine' }
// }

   stages {
      stage('Example') {
         steps {
             echo "Running ${env.BUILD_ID} on ${env.JENKINS_URL} on node ${env.NODE_NAME} with jobname ${env.JOB_NAME} on workspace ${env.WORKSPACE}"
         }
      }

      stage('Infra') {
         // Create the AIP infrastructure so we can Deploy
         steps {
             echo 'Infrastructuring...'
//           cd DU-DEV-INSTALLATION/deployment/dev_configs/scripts
//           sh '00.create_folders.sh'
//           sh '01.get_artifacts.sh'
//           sh '02.prepare_bundles_portal.sh'
//           sh '02.prepare_bundles_t80.sh'
//           sh '05.copy_license.sh'
//           sh '07.configure_oracle.sh'
//           sh '09.pull_push_registry.sh'
         }
      }
      stage('Build') {
         // We only build images for FMS T80 to add some ML functionalities, all other images should be used "as is"
         steps {
//           sh 'build-T80'
             echo 'Building...'
         }
      }
      stage('Test') {
         //
         steps {
//           sh 'node --version'
             echo 'Testing...'
         }
      }
      stage('Deploy') {
         //
         steps {
             echo 'Deploying...'
//           cd DU-DEV-INSTALLATION/deployment/dev_configs/scripts
//           sh 'deployAll.sh'
         }
      }
   }

}

// buildDiscarder !!!